{"ast":null,"code":"import * as actionTypes from '../actions/actionsTodo';\nconst initialState = {\n  tasklist: [],\n  data: '',\n  todos: '',\n  id: 0,\n  title: '',\n  desc: '',\n  status: \"default\",\n  edit: false,\n  taskStatus: false,\n  addFlag: false,\n  updateCheckBox: ''\n};\n\nfunction todoApp(state = initialState, action) {\n  switch (action.type) {\n    case 'ADD_FIELD_VALUE':\n      return state = setFieldsValue(state, action.name, action.value);\n\n    case 'ADD_CHECKBOX_VALUE':\n      return state = setCheckboxValue(state, action.name, action.value);\n\n    case 'ADD_USERS_DATA':\n      return state = setUserData(state, action.data);\n\n    case 'ADD_USERS_TODOS':\n      return state = setUserTodos(state, action.data);\n\n    case 'ADD_TASK':\n      return state = setTodoList(state, action.tasklist, action.userId);\n\n    case 'DELETE_TASK':\n      return state = deleteFromList(state, action.todo);\n\n    case 'UPDATE_CHECKBOX':\n      return state = updateCheckboxValue(state, action.name, action.checked, action.id);\n\n    case 'EDIT_TASK':\n      return state = editFromList(state, action.todo);\n\n    case 'SET_EDITED_LIST':\n      return state = setEditedList(state, action.todo);\n\n    case 'UPDATE_TASK':\n      return state = setUpdatedList(state, action.tasklist, action.userId, action.title);\n\n    default:\n      return state;\n  }\n}\n\nconst setFieldsValue = (state, name, value) => {\n  console.log(name, value);\n  state = { ...state,\n    [name]: value\n  };\n  return state;\n};\n\nconst setCheckboxValue = (state, name, value) => {\n  console.log(name, value);\n  state = { ...state,\n    [name]: value\n  };\n  return state;\n};\n\nconst updateCheckboxValue = (state, name, checked, id) => {\n  console.log(name, checked, id);\n  console.log(state);\n  state = { ...state,\n    [name]: checked\n  };\n  return state;\n};\n\nconst setUserData = (state, data) => {\n  state = { ...state,\n    data: data\n  };\n  return state;\n};\n\nconst setUserTodos = (state, data) => {\n  state = { ...state,\n    todos: data\n  };\n  return state;\n};\n\nconst setTodoList = (state, counter, userId) => {\n  const tasklist = {\n    userId: userId,\n    id: counter,\n    title: state.title,\n    completed: state.taskStatus\n  };\n  console.log(tasklist);\n  console.log(state);\n  state = { ...state,\n    todos: [...state.todos, tasklist]\n  };\n  return state;\n};\n\nconst setUpdatedList = (state, counter, userId) => {\n  const tasklist = {\n    userId: userId,\n    id: counter,\n    title: state.title,\n    completed: state.taskStatus\n  };\n  console.log(tasklist);\n  console.log(state);\n  state = { ...state,\n    todos: [...state.todos, tasklist]\n  };\n  return state;\n};\n\nconst setEditedList = state => {\n  const tasklist = [...state.tasklist];\n  tasklist[state.id - 1] = {\n    id: state.id,\n    title: state.title,\n    status: state.status\n  };\n  state = { ...state,\n    edit: false,\n    tasklist: tasklist\n  };\n  return state;\n};\n\nconst deleteFromList = (state, todo) => {\n  console.log(todo);\n  console.log(state);\n  var tasks = state.todos.filter(task => {\n    console.log(task.id, \"wowwwww\", todo.id);\n    return task.id !== todo.id;\n  });\n  state = { ...state,\n    todos: tasks\n  };\n  console.log(state.todos);\n  return state;\n};\n\nconst editFromList = (state, todo, i) => {\n  state = { ...state,\n    id: todo.id,\n    title: todo.title,\n    desc: todo.description,\n    status: todo.status,\n    edit: true\n  };\n  return state;\n};\n\nexport default todoApp;","map":{"version":3,"sources":["/home/neetu/todoBhum/manageTodo/src/reducer/todoReducer.js"],"names":["actionTypes","initialState","tasklist","data","todos","id","title","desc","status","edit","taskStatus","addFlag","updateCheckBox","todoApp","state","action","type","setFieldsValue","name","value","setCheckboxValue","setUserData","setUserTodos","setTodoList","userId","deleteFromList","todo","updateCheckboxValue","checked","editFromList","setEditedList","setUpdatedList","console","log","counter","completed","tasks","filter","task","i","description"],"mappings":"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","sourcesContent":["import * as actionTypes from '../actions/actionsTodo'\r\n\r\nconst initialState = {\r\n    tasklist:[],\r\n    data:'',\r\n    todos:'',\r\n    id:0,\r\n    title:'',\r\n    desc:'',\r\n    status:\"default\",\r\n    edit:false,\r\n    taskStatus:false,\r\n    addFlag: false,\r\n    updateCheckBox:''\r\n\r\n  };\r\n\r\n\r\nfunction todoApp(state = initialState, action) {\r\n    \r\n  switch (action.type) {\r\n    case 'ADD_FIELD_VALUE':\r\n        return state= setFieldsValue(state,action.name,action.value);\r\n    case 'ADD_CHECKBOX_VALUE':\r\n        return state= setCheckboxValue(state,action.name,action.value);        \r\n    case 'ADD_USERS_DATA':\r\n        return state= setUserData(state,action.data);\r\n    case 'ADD_USERS_TODOS':\r\n        return state= setUserTodos(state,action.data);          \r\n    case 'ADD_TASK':\r\n        return state= setTodoList(state,action.tasklist,action.userId);\r\n    case 'DELETE_TASK':\r\n        return state= deleteFromList(state,action.todo);\r\n    case 'UPDATE_CHECKBOX':\r\n        return state= updateCheckboxValue(state,action.name,action.checked,action.id);\r\n    case 'EDIT_TASK':\r\n        return state= editFromList(state,action.todo);\r\n    case 'SET_EDITED_LIST':\r\n          return state= setEditedList(state,action.todo);\r\n    case 'UPDATE_TASK':\r\n          return state= setUpdatedList(state,action.tasklist,action.userId, action.title);\r\n          \r\n        \r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst setFieldsValue=(state,name,value)=>{\r\n  console.log(name,value)\r\n  state={\r\n    ...state,\r\n    [name]:value\r\n  }\r\n  return state\r\n}\r\nconst setCheckboxValue=(state,name,value)=>{\r\n  console.log(name,value)\r\n  state={\r\n    ...state,\r\n    [name]:value\r\n  }\r\n  return state\r\n}\r\nconst updateCheckboxValue=(state,name,checked,id)=>{\r\n  console.log(name,checked,id)\r\n  console.log(state)\r\n  state={\r\n    ...state,\r\n    [name]:checked\r\n  }\r\n  return state\r\n}\r\nconst setUserData=(state,data)=>{\r\n  state={\r\n    ...state,\r\n    data:data\r\n  }\r\n  return state\r\n}\r\nconst setUserTodos=(state,data)=>{\r\n  state={\r\n    ...state,\r\n    todos:data\r\n  }\r\n  return state\r\n}\r\n\r\n\r\nconst setTodoList=(state,counter,userId)=>{\r\n  const tasklist = {userId:userId, id:counter,title: state.title,completed:state.taskStatus};\r\n  console.log(tasklist)\r\n  console.log(state)\r\n  state={\r\n    ...state,\r\n    todos:[...state.todos,tasklist]\r\n  }\r\nreturn state\r\n}\r\n\r\nconst setUpdatedList=(state,counter,userId)=>{\r\n  const tasklist = {userId:userId, id:counter,title: state.title,completed:state.taskStatus};\r\n  console.log(tasklist)\r\n  console.log(state)\r\n  state={\r\n    ...state,\r\n    todos:[...state.todos,tasklist]\r\n  }\r\nreturn state\r\n}\r\n\r\n\r\nconst setEditedList=(state)=>{\r\n  const tasklist=[...state.tasklist];\r\n  tasklist[state.id-1]={id:state.id,title: state.title,status:state.status};\r\n\r\n  state={\r\n    ...state,\r\n    edit:false,\r\n    tasklist:tasklist\r\n  }\r\nreturn state\r\n}\r\n\r\nconst deleteFromList=(state,todo)=>{\r\n\r\nconsole.log(todo)\r\nconsole.log(state)\r\n  var tasks =state.todos.filter((task)=>{\r\n    console.log(task.id ,\"wowwwww\",todo.id)\r\n    return task.id!==todo.id\r\n  })\r\n\r\n  state={\r\n    ...state,\r\n    todos:tasks\r\n  }\r\nconsole.log(state.todos)\r\nreturn state\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst editFromList=(state,todo,i)=>{\r\n\r\n  state={\r\n    ...state,\r\n    id:todo.id,\r\n    title:todo.title,\r\n    desc:todo.description,\r\n    status:todo.status,\r\n    edit:true\r\n  }\r\nreturn state\r\n}\r\n\r\n\r\n\r\nexport default todoApp"]},"metadata":{},"sourceType":"module"}